name: Tag/Release CI
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image Version'
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "estebangfernandeza@gmail.com"
          git config --local user.name "Esteban Fernandez"
          git tag -a ${{ github.event.inputs.version }} -m "MiShop API Release ${{ github.event.inputs.version }}"
          git push origin ${{ github.event.inputs.version }}
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ secrets.event.inputs.version }}
        run: |
          CODE=$(
            curl --write-out '%{http_code}' -silent --output /dev/null --header "Accept: application/vnd.github+json" --header "Authorization: Bearer $GITHUB_TOKEN" --data '{"tag_name": "$VERSION}","target_commitish": "master","name": "App Version $VERSION","body": "Release of version $VERSION","draft": false,"prerelease": false,"generate_release_notes":false}' https://api.github.com/repos/estebanfern/github-release/releases
          )
          if [ $CODE!="200" ]
          then
            echo "FAILURE - $CODE"
            exit 1
          else
            echo "SUCCESS - $CODE"
          fi

  build:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build App
        run: |
          echo "Building app v${{ github.event.inputs.version}}"
      - name: Build & Push Docker Image to DockerHub
        run: |
          echo "Pushing image ${{ github.event.inputs.version }} to Docker Registry"
